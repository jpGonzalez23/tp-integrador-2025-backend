<%- include("partials/head.ejs") %>
<%- include("partials/nav.ejs") %>

    <hr>
    <h1><%= title %></h1>
    <p><%= about %></p>
    <hr>

    <main id="contenedor-get">

        <div id="getProduct-container" class="crudForm-container">
            <h2>Consultar producto</h2>

            <form id="getProduct-form">
                <label for="idProd">Id producto</label>
                <input type="number" name="idProd" id="idProd" required>

                <input type="submit" value="Consultar producto">
            </form>
        </div>

        <div id="getId-container">
            <ul id="getId-list">
            </ul>
        </div>

        <div id="updateForm-container"></div>

    </main>
    <script>
        const url = "http://localhost:3000/api";

        let getProduct_form = document.getElementById("getProduct-form");
        let getId_lista = document.getElementById("getId-list");
        let updateForm_container = document.getElementById("updateForm-container");

        getProduct_form.addEventListener("submit", async (event) => {
            event.preventDefault(); // Evitamos el envio por defecto del formulario

            try {
                let formData = new FormData(event.target);
                let data = Object.fromEntries(formData.entries());
                console.log(`Data: `, data);

                let idProd = data.idProd.trim();
                console.log(`idProd: ${idProd}`);

                if (!idProd) {
                    throw new Error(`Error: en el envio de datos del formulario`);
                }

                let response = await fetch(`${url}/productos/${idProd}`);

                let datos = await response.json();
                console.log(`Datos: `, datos);  

                if (!datos.payload || datos.payload.length === 0) {
                    throw new Error(`Error: No se encontraron productos con el ID ${idProd}`);      
                }

                let producto = datos.payload[0];
                console.log(`Producto: `, producto);
                
                let htmlProducto = `
                    <li class="li-listados productos-listados">
                        <div class="li-listados_datos">
                            <p> Nombre: ${producto.nombre} </p>
                            <img src="${producto.img}" alt="${producto.nombre}" class="img-listados">
                        </div>
                        <div class="li-listados_boton">
                            <input class="listados_boton" id="updateProduct_button" type="button" value="Actualizar producto">
                        </div>
                    </li>
                `;

                getId_lista.innerHTML = htmlProducto;

                let updateProduct_button = document.getElementById("updateProduct_button");

                updateProduct_button.addEventListener("click", () => {
                    formularioPutProducto(event, producto);
                });
                
            } catch (error) {
                console.error("Error al obtener el producto: ", error);
                getId_lista.innerHTML = `<p> ${error.message}</p>`; 
                
            }
        });

        function formularioPutProducto(event, producto) {
            event.stopPropagation(); // Evitamos que el evento se propague

            console.log(producto);
            
            let updateProduct = `
            <div id="updateProducts-container" class="crudForm-container">
                <h2>Actualizar producto</h2>

                <form id="updateProducts-form" autocomplete="off">

                    <label for="idProduc">id</label>
                    <input type="text" name="id" id="idProduc" value="${producto.id_producto}" readonly>

                    <label for="nombreProduc">Nombre</label>
                    <input type="text" name="nombre" id="nombreProduc" value="${producto.nombre}" readonly>
                    
                    <label for="descripcionProduct">Descripcion</label>
                    <input type="text" name="descripcion" id="descripcionProduct" value="${producto.descripcion}" readonly>
                    
                    <label for="precioProduct">Precio</label>
                    <input type="number" name="precio" id="precioProduct" value="${producto.precio}" readonly>

                    <label for="stockProduct">stock</label>
                    <input type="number" name="stock" id="stockProduct" value="${producto.stock}" readonly>

                    <label for="imgProduct">Imagen</label>
                    <input type="text" name="img" id="imagenProd" value="${producto.img}" readonly>

                    <label for="categoriaProduct">Categoria</label>
                    <select name="categoria" id="categoriaProduct" readonly>
                        <option value="ps4">PS4</option>
                        <option value="ps5">PS5</option>
                    </select>

                    <label for="estadoProduct">Estado</label>
                    <select name="id_estado" id="estadoProduct"  required>
                        <option value="1" ${producto.id_estado == 1 ? "selected" : ""}>Activo</option>
                        <option value="2" ${producto.id_estado == 2 ? "selected" : ""}>Inactivo</option>
                    </select>

                    <input type="submit" value="Actualizar producto">
                </form>
            </div>
            `;

            updateForm_container.innerHTML = updateProduct;

            let updateProducts_form = document.getElementById("updateProducts-form");
            updateProducts_form.addEventListener("submit", async (event) => {
                actualizarProducto(event);
            });
        }

        async function actualizarProducto(event) {
            event.preventDefault(); // Evitamos el envio por defecto del formulario

            let formData = new FormData(event.target);
            let data = Object.fromEntries(formData.entries());

            console.table(data);

            if(!data.id_estado) {
                alert("Error: Debe seleccionar un estado para el producto");
                return;
            }

            try {
                let response = await fetch(`${url}/productos/${data.id}`, {
                    method: "PUT",
                    headers: {
                        "Content-Type": "application/json"
                    },
                    body: JSON.stringify(data)
                });

                if (response.ok) {
                    console.log(response);
                    
                    let result = await response.json();
                    console.log("Producto actualizado: ", result.message);
                    alert(result.message);
                    getId_lista.innerHTML = ""; // Limpiamos la lista de productos consultados
                    updateForm_container.innerHTML = ""; // Limpiamos el formulario de actualizaci√≥n
                }
                else {
                    let error = await response.json();
                    throw new Error(`Error al actualizar el producto: ${error.message}`);
                }
            } catch (error) {
                console.error("Error al actualizar el producto: ", error);
                alert(`Error: ${error.message}`);
            }
        }


    </script>

<%- include("partials/footer.ejs") %>