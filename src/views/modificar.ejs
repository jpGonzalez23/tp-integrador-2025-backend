<%- include("partials/head.ejs") %>
<%- include("partials/nav.ejs") %>

    <hr>
        <h1><%= title %></h1>
        <p><%= about %></p>
    <hr>

    <main id="contenedor-get">

        <div id="getProduct-container" class="crudForm-container">
            <h2>Consultar producto</h2>

            <form id="getProduct-form">
                <label for="idProd">Id producto</label>
                <input type="number" name="idProd" id="idProd" required>

                <input type="submit" value="Consultar producto">
            </form>
        </div>

        <div id="getId-container">
            <ul id="getId-list">
            </ul>
        </div>

        <div id="updateForm-container"></div>

    </main>


    <!-- Por tema legibilidad, incorporamos aca el JavaScript -->
    <script>

        const url = "http://localhost:3000/api";

        ////////////////
        // GET BY ID //
        let getProduct_form = document.getElementById("getProduct-form");
        let getId_lista = document.getElementById("getId-list");
        let updateForm_container = document.getElementById("updateForm-container");

        getProduct_form.addEventListener("submit", async (event) => {

            event.preventDefault(); // Evitamos el envio por defecto del formulario

            try {
                // Queremos extraer la informacion de los campos del formulario!
                // Este es un objeto JavaScript especifico de informacion de formularios HTML
                let formData = new FormData(event.target); 

                // Transformamos el objeto FormData en un objeto JS normal
                let data = Object.fromEntries(formData.entries());
                console.log(data);                

                ///////////////////
                // Optimizacion 2: Eliminamos posibles espacios con .trim()
                let idProd = data.idProd.trim(); 
                console.log(idProd);

                ///////////////////
                // Optimizacion 3: Validacion basica
                if(!idProd) {
                    throw new Error(`Error en el envio de datos del formulario`);
                }

                let response = await fetch(`${url}/productos/${idProd}`);

                ///////////////////
                // Optimizacion 4: Manejamos el error en una posible respuesta no existosa
                if(!response.ok) {
                    throw new Error(`Error ${response.status}: ${response.statusText}`); // Error 404: Not Found
                }

                let datos = await response.json();
                console.log(datos);

                ///////////////////
                // Optimizacion 5: Verificamos si existen productos en la respuesta
                if(!datos.payload || datos.payload.length === 0) {
                    throw new Error("No se encontro el producto solicitado")
                }

                // Guardamos nuestro producto en una variable
                let producto = datos.payload[0];
                console.log(producto);


                // Le agregamos el boton que permita actualizar este producto encontrado
                let htmlProducto = `
                    <li class="li-listados productos-listados">
                        <div class="li-listados_datos">
                            <p> Nombre: ${producto.nombre} </p>
                            <img src="${producto.img}" alt="${producto.nombre}" class="img-listados">
                        </div>
                        <div class="li-listados_boton">
                            <input class="listados_boton" id="updateProduct_button" type="button" value="Actualizar producto">
                        </div>
                    </li>
                `;

                getId_lista.innerHTML = htmlProducto;

                let updateProduct_button = document.getElementById("updateProduct_button");

                updateProduct_button.addEventListener("click", function(event) {
                    formularioPutProducto(event, producto);
                });


            } catch (error) {
                console.error("Error al obtener el producto: ", error);

                ///////////////////
                // Optimizacion 6: Escribir un mensaje de error
                getId_lista.innerHTML = `<p>${error.message}</p>`
            }
        });
        //////////
        // PUT //

        // Manejamos ele evneto para mostrar el formulario con los valores por defecto
        function formularioPutProducto(event, producto) {
            event.stopPropagation(); // Evitamos la propagacion de eventos
            console.log(producto);

            let updateProduct = `
            <div id="updateProducts-container" class="crudForm-container">
                <h2>Actualizar producto</h2>

                <form id="updateProducts-form" autocomplete="off">

                    <label for="idProduc">id</label>
                    <input type="text" name="id" id="idProduc" value="${producto.id_producto}" readonly>

                    <label for="nombreProduc">Nombre</label>
                    <input type="text" name="nombre" id="nombreProduc" value="${producto.nombre}" required>
                    
                    <label for="descripcionProduct">Descripcion</label>
                    <input type="text" name="descripcion" id="descripcionProduct" value="${producto.descripcion}" required>
                    
                    <label for="precioProduct">Precio</label>
                    <input type="number" name="precio" id="precioProduct" value="${producto.precio}" required>

                    <label for="stockProduct">stock</label>
                    <input type="number" name="stock" id="stockProduct" value="${producto.stock}" required>

                    <label for="imgProduct">Imagen</label>
                    <input type="text" name="img" id="imagenProd" value="${producto.img}" required>

                    <label for="categoriaProduct">Categoria</label>
                    <select name="categoria" id="categoriaProduct" required>
                        <option value="ps4">PS4</option>
                        <option value="ps5">PS5</option>
                    </select>

                    <input type="submit" value="Actualizar producto">
                </form>
            </div>
            `;

            updateForm_container.innerHTML = updateProduct;


            let updateProducts_form = document.getElementById("updateProducts-form");

            updateProducts_form.addEventListener("submit", function(event) {
                actualizarProducto(event);
            });
        }

        // Enviamos los nuevos datos del formulario al servidor
        async function actualizarProducto(event) {

            event.preventDefault(); // Prevenimos el envio por defecto del formulario

            let formData = new FormData(event.target);

            let data = Object.fromEntries(formData.entries());
            console.table(data);

            if(!data.nombre || !data.descripcion || !data.precio || !data.stock || !data.img || !data.categoria) {
                alert("Todos los campos son obligatorios");
                return;
            }

            try {
                let response = await fetch(`${url}/productos`, {
                    method: "PUT",
                    headers: {
                        "Content-type" : "application/json",
                    },
                    body: JSON.stringify(data)
                });

                if(response.ok) {
                    console.log(response);

                    let result = await response.json();
                    console.log(result.message);
                    alert(result.message);

                    // Vaciamos si existiera la lista y el formulario de actualizacion del producto
                    getId_lista.innerHTML = "";
                    updateForm_container.innerHTML = "";

                } else {
                    let error = await response.json();
                    console.log("Error: ", error.message)
                }

            } catch (error) {
                console.log("Error al enviar los datos: ", error);
                alert("Error al procesar la solicitud");
            }
        }
    </script>

<%- include("partials/footer.ejs") %>